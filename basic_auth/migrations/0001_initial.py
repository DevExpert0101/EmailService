# Generated by Django 4.0 on 2023-04-04 22:45

import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('delete_reason', models.TextField()),
                ('avatar', models.TextField(default=None, null=True)),
                ('google_auth', models.BooleanField(default=False)),
                ('token', models.CharField(default=None, max_length=265, null=True)),
                ('is_verified', models.BooleanField(default=False)),
                ('unverified_changed_email', models.CharField(default=None, max_length=265, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'user',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Plan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('plan_type', models.TextField(choices=[('TRIAL', 'Trial'), ('ANNUAL_NORMAL', 'Full Annual Account (Normal)'), ('ANNUAL_ENTERPRISE', 'Full Annual Account (Enterprise)')])),
                ('price', models.FloatField()),
                ('search_credits', models.IntegerField()),
            ],
            options={
                'db_table': 'plan',
            },
        ),
        migrations.CreateModel(
            name='UserPlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.TextField(choices=[('ACTIVE', 'Plan is active'), ('EXPIRED', 'Plan is expired'), ('PENDING', 'Waiting for payment')])),
                ('search_credits', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('plan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='basic_auth.plan')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_plans', to='basic_auth.user')),
            ],
            options={
                'db_table': 'user_plan',
            },
        ),
        migrations.AddIndex(
            model_name='userplan',
            index=models.Index(fields=['status'], name='user_plan_status_3b3112_idx'),
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['unverified_changed_email'], name='user_unverif_7db9d2_idx'),
        ),
    ]
